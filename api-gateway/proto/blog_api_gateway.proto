syntax = "proto3";

option go_package = "proto/blogs";

import "google/api/annotations.proto";

service BlogService {
  rpc GetBlog(GetBlogRequest) returns (Blog) {
    option (google.api.http) = {
      get: "/blogs/{id}"
    };
  }

  rpc CreateBlog(Blog) returns (Blog) {
    option (google.api.http) = {
      post: "/blogs",
      body: "*"
    };
  }

  rpc GetAllBlog(Empty) returns (ListBlog){
    option (google.api.http) = {
      get: "/blogs"
    };
  }
  
  rpc UpdateOneBlog(Blog) returns (Blog){
    option (google.api.http) = {
      put: "/blogs/updateOneBlog",
      body: "*"
    };
  }

  rpc GetAllBlogsByStatus(GetBlogStatus) returns (ListBlog){
    option (google.api.http) = {
      get: "/blogs/getByStatus/{state}"
    };
  }
  rpc UpdateRating(UpdateRatingRequest) returns(Blog){
    option (google.api.http) = {
      put: "/blogs/rating/{userId}/{blogId}/{value}",
      body: "*"
    };
  }

  rpc DeleteRating(DeleteRatingRequest) returns (Blog){
    option (google.api.http) = {
      delete: "/blogs/rating/{userId}/{blogId}"
    };
  }
}

message Blog {
  int32 Id = 1;
  string Title = 2;
  string Description = 3;
  string CreationDate = 4;
  int32 Status = 5;
  int32 UserId = 6;
  int32 RatingSum = 8;
  repeated Rating Ratings = 9;
}

message Rating {
  int32 UserId = 1;
  string CreationDate = 2;
  int32 RatingValue = 3;
}

message GetBlogRequest {
  int32 id = 1;
}

message Empty {} 

message ListBlog { 
  repeated Blog Blogs = 1;
}

message GetBlogStatus{
  int32 state = 1;
}

message UpdateRatingRequest{
  int32 blogId = 1;
  int32 userId = 2;
  int32 value = 3;
}

message DeleteRatingRequest{
  int32 blogId = 1;
  int32 userId = 2;
}